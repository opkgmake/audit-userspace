name: ARM64 Static Build

on:
  workflow_dispatch:  # 手动触发

jobs:
  static-build-arm64:
    name: Static Build for ARM64
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build static ARM64 binaries
        run: |
          # 安装 ARM64 交叉编译工具链
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            autoconf \
            automake \
            libtool \
            file \
            pkg-config \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            binutils-aarch64-linux-gnu \
            libc6-dev-arm64-cross \
            libldap-dev \
            libsasl2-dev \
            krb5-multidev

          # 验证交叉编译器
          echo "验证交叉编译器:"
          aarch64-linux-gnu-gcc --version
          echo 'int main(){return 0;}' > test.c
          aarch64-linux-gnu-gcc -static -o test test.c
          file test
          rm test.c test

          # 准备构建环境
          autoreconf -f --install
          
          # 配置项目
          ./configure \
            --host=aarch64-linux-gnu \
            --build=x86_64-linux-gnu \
            --enable-static \
            --disable-shared \
            --with-python3=no \
            --enable-gssapi-krb5=yes \
            --with-aarch64 \
            --with-libcap-ng=yes \
            --without-golang \
            --enable-zos-remote \
            --enable-experimental \
            --with-io_uring \
            CC="aarch64-linux-gnu-gcc" \
            CXX="aarch64-linux-gnu-g++" \
            AR="aarch64-linux-gnu-ar" \
            RANLIB="aarch64-linux-gnu-ranlib" \
            STRIP="aarch64-linux-gnu-strip" \
            CFLAGS="-static -O2" \
            CXXFLAGS="-static -O2" \
            LDFLAGS="-static -lldap -llber -lsasl2 -lkrb5 -lkrb5support"
          
          # 构建项目
          make -j$(nproc)
          
          # 剥离调试符号
          find . -type f -executable -exec aarch64-linux-gnu-strip {} \;
          
          # 收集二进制文件
          mkdir -p artifacts/static-arm64-bin
          find . -type f -executable -exec cp {} artifacts/static-arm64-bin/ \;
          
          # 验证文件
          file artifacts/static-arm64-bin/* | grep 'statically linked' | grep 'ARM aarch64'
          
          # 打包
          tar -czvf static-arm64-binaries.tar.gz -C artifacts/static-arm64-bin .
          du -h static-arm64-binaries.tar.gz

      - name: Upload static ARM64 binaries
        uses: actions/upload-artifact@v4
        with:
          name: static-arm64-binaries
          path: static-arm64-binaries.tar.gz
          retention-days: 7
